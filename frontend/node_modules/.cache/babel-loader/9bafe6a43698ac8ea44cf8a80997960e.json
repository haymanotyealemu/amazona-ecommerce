{"ast":null,"code":"import Axios from 'axios';\nimport { USER_SIGNIN_FAIL, USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS } from '../constants/userConstants';\nexport const signin = (email, password) => async dispatch => {\n  dispatch({\n    type: USER_SIGNIN_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post('/api/users/signin', {\n      email,\n      password\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_SIGNIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const signout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  localStorage.removeItem('cartItems'); // localStorage.removeItem('shippingAddress');\n\n  dispatch({\n    type: USER_SIGNOUT\n  }); // document.location.href = '/signin';\n};\nexport const register = (name, email, password) => async dispatch => {\n  dispatch({\n    type: USER_REGISTER_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post('/api/users/register', {\n      name,\n      email,\n      password\n    });\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const detailsUser = userId => async (dispatch, getState) => {\n  dispatch({\n    type: USER_DETAILS_REQUEST,\n    payload: userId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/users/${userId}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo === null || userInfo === void 0 ? void 0 : userInfo.token}`\n      }\n    });\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/John/Desktop/amazona/frontend/src/actions/userActions.js"],"names":["Axios","USER_SIGNIN_FAIL","USER_SIGNIN_REQUEST","USER_SIGNIN_SUCCESS","USER_SIGNOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","signin","email","password","dispatch","type","payload","data","post","localStorage","setItem","JSON","stringify","error","response","message","signout","removeItem","register","name","detailsUser","userId","getState","userSignin","userInfo","get","headers","Authorization","token"],"mappings":"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","sourcesContent":["import Axios from 'axios';\r\nimport { USER_SIGNIN_FAIL,\r\n    USER_SIGNIN_REQUEST,\r\n    USER_SIGNIN_SUCCESS, USER_SIGNOUT,USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS,USER_REGISTER_FAIL, USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS} from '../constants/userConstants';\r\n\r\nexport const signin = (email, password) => async (dispatch) => {\r\n    dispatch({ type: USER_SIGNIN_REQUEST, payload: { email, password } });\r\n    try {\r\n      const { data } = await Axios.post('/api/users/signin', { email, password });\r\n      dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\r\n      localStorage.setItem('userInfo', JSON.stringify(data));\r\n    } catch (error) {\r\n      dispatch({\r\n        type: USER_SIGNIN_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n  export const signout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo');\r\n    localStorage.removeItem('cartItems');\r\n    // localStorage.removeItem('shippingAddress');\r\n    dispatch({ type: USER_SIGNOUT });\r\n    // document.location.href = '/signin';\r\n  };\r\n  export const register = (name, email, password) => async (dispatch) => {\r\n    dispatch({ type: USER_REGISTER_REQUEST, payload: { email, password } });\r\n    try {\r\n      const { data } = await Axios.post('/api/users/register', {\r\n        name,\r\n        email,\r\n        password,\r\n      });\r\n      dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\r\n      dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\r\n      localStorage.setItem('userInfo', JSON.stringify(data));\r\n    } catch (error) {\r\n      dispatch({\r\n        type: USER_REGISTER_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n  export const detailsUser = (userId) => async (dispatch, getState) => {\r\n    dispatch({ type: USER_DETAILS_REQUEST, payload: userId });\r\n    const {\r\n      userSignin: { userInfo },\r\n    } = getState();\r\n    try {\r\n      const { data } = await Axios.get(`/api/users/${userId}`, {\r\n        headers: { Authorization: `Bearer ${userInfo?.token}` },\r\n      });\r\n      dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      dispatch({ type: USER_DETAILS_FAIL, payload: message });\r\n    }\r\n  };"]},"metadata":{},"sourceType":"module"}