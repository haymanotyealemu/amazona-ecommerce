{"ast":null,"code":"import Axios from 'axios';\nimport { PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_FAIL, PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_FAIL, PRODUCT_CREATE_SUCCESS } from '../constants/productConstants';\nexport const listProducts = () => async dispatch => {\n  dispatch({\n    type: PRODUCT_LIST_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get('api/products');\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\nexport const detailsProduct = productId => async dispatch => {\n  dispatch({\n    type: PRODUCT_DETAILS_REQUEST,\n    payload: productId\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/products/${productId}`);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const createProduct = () => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_CREATE_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.post('/api/products', {}, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_CREATE_SUCCESS,\n      payload: data.product\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/John/Desktop/amazona/frontend/src/actions/productActions.js"],"names":["Axios","PRODUCT_LIST_FAIL","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_SUCCESS","listProducts","dispatch","type","data","get","payload","error","message","detailsProduct","productId","response","createProduct","getState","userSignin","userInfo","post","headers","Authorization","token","product"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,iBADJ,EAEIC,oBAFJ,EAGIC,oBAHJ,EAIIC,uBAJJ,EAKIC,uBALJ,EAMIC,oBANJ,EAOIC,sBAPJ,EAQIC,mBARJ,EASIC,sBATJ,QAWO,+BAXP;AAaA,OAAO,MAAMC,YAAY,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAClDA,EAAAA,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAAEV;AADD,GAAD,CAAR;;AAGA,MAAI;AACA,UAAM;AAAEW,MAAAA;AAAF,QAAW,MAAMb,KAAK,CAACc,GAAN,CAAU,cAAV,CAAvB;AACAH,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAET,oBAAR;AAA8BY,MAAAA,OAAO,EAAEF;AAAvC,KAAD,CAAR;AACH,GAHD,CAGE,OAAOG,KAAP,EAAa;AACXL,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEX,iBAAR;AAA2Bc,MAAAA,OAAO,EAAEC,KAAK,CAACC;AAA1C,KAAD,CAAR;AACH;AAEJ,CAXM;AAYP,OAAO,MAAMC,cAAc,GAAIC,SAAD,IAAe,MAAOR,QAAP,IAAoB;AAC7DA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEP,uBAAR;AAAiCU,IAAAA,OAAO,EAAEI;AAA1C,GAAD,CAAR;;AACA,MAAI;AACF,UAAM;AAAEN,MAAAA;AAAF,QAAW,MAAMb,KAAK,CAACc,GAAN,CAAW,iBAAgBK,SAAU,EAArC,CAAvB;AACAR,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAER,uBAAR;AAAiCW,MAAAA,OAAO,EAAEF;AAA1C,KAAD,CAAR;AACD,GAHD,CAGE,OAAOG,KAAP,EAAc;AACdL,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEN,oBADC;AAEPS,MAAAA,OAAO,EACLC,KAAK,CAACI,QAAN,IAAkBJ,KAAK,CAACI,QAAN,CAAeP,IAAf,CAAoBI,OAAtC,GACID,KAAK,CAACI,QAAN,CAAeP,IAAf,CAAoBI,OADxB,GAEID,KAAK,CAACC;AALL,KAAD,CAAR;AAOD;AACF,CAdI;AAeL,OAAO,MAAMI,aAAa,GAAG,MAAM,OAAOV,QAAP,EAAiBW,QAAjB,KAA8B;AAC/DX,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEL;AAAR,GAAD,CAAR;AACA,QAAM;AAAEgB,IAAAA,UAAU,EAAE;AAACC,MAAAA;AAAD;AAAd,MAA4BF,QAAQ,EAA1C;;AACA,MAAI;AACF,UAAM;AAAET,MAAAA;AAAF,QAAW,MAAMb,KAAK,CAACyB,IAAN,CACrB,eADqB,EAErB,EAFqB,EAGrB;AACEC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;AAA1C;AADX,KAHqB,CAAvB;AAOAjB,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEH,sBADC;AAEPM,MAAAA,OAAO,EAAEF,IAAI,CAACgB;AAFP,KAAD,CAAR;AAID,GAZD,CAYE,OAAOb,KAAP,EAAc;AACdL,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEJ,mBADC;AAEPO,MAAAA,OAAO,EACLC,KAAK,CAACI,QAAN,IAAkBJ,KAAK,CAACI,QAAN,CAAeP,IAAf,CAAoBI,OAAtC,GACID,KAAK,CAACI,QAAN,CAAeP,IAAf,CAAoBI,OADxB,GAEID,KAAK,CAACC;AALL,KAAD,CAAR;AAOD;AACF,CAxBM","sourcesContent":["import Axios from 'axios';\r\nimport {\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_SUCCESS,\r\n\r\n} from '../constants/productConstants';\r\n\r\nexport const listProducts = () => async (dispatch) => {\r\n    dispatch({\r\n        type: PRODUCT_LIST_REQUEST,\r\n    });\r\n    try {\r\n        const { data } = await Axios.get('api/products');\r\n        dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data});\r\n    } catch (error){\r\n        dispatch({ type: PRODUCT_LIST_FAIL, payload: error.message });\r\n    }\r\n\r\n};\r\nexport const detailsProduct = (productId) => async (dispatch) => {\r\n    dispatch({ type: PRODUCT_DETAILS_REQUEST, payload: productId });\r\n    try {\r\n      const { data } = await Axios.get(`/api/products/${productId}`);\r\n      dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: PRODUCT_DETAILS_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n  export const createProduct = () => async (dispatch, getState) => {\r\n    dispatch({ type: PRODUCT_CREATE_REQUEST});\r\n    const { userSignin: {userInfo}} = getState();\r\n    try {\r\n      const { data } = await Axios.post(\r\n        '/api/products',\r\n        {},\r\n        {\r\n          headers: { Authorization: `Bearer ${userInfo.token}` },\r\n        }\r\n      );\r\n      dispatch({\r\n        type: PRODUCT_CREATE_SUCCESS,\r\n        payload: data.product,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: PRODUCT_CREATE_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n"]},"metadata":{},"sourceType":"module"}